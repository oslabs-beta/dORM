model films {
  id               Int                @id @default(autoincrement()) @map("_id")
  title            String             @db.VarChar
  episode_id       Int
  opening_crawl    String             @db.VarChar
  director         String             @db.VarChar
  producer         String             @db.VarChar
  release_date     DateTime           @db.Date
  people_in_films  people_in_films[]
  planets_in_films planets_in_films[]
  species_in_films species_in_films[]
  vessels_in_films vessels_in_films[]
}

model people {
  id              Int               @id @default(autoincrement()) @map("_id")
  name            String            @db.VarChar
  mass            String?           @db.VarChar
  hair_color      String?           @db.VarChar
  skin_color      String?           @db.VarChar
  eye_color       String?           @db.VarChar
  birth_year      String?           @db.VarChar
  gender          String?           @db.VarChar
  species_id      BigInt?
  homeworld_id    BigInt?
  height          Int?
  planets         planets?          @relation(fields: [homeworld_id], references: [id])
  species         species?          @relation(fields: [species_id], references: [id])
  people_in_films people_in_films[]
  pilots          pilots[]
}

model people_in_films {
  id        Int    @id @default(autoincrement()) @map("_id")
  person_id BigInt
  film_id   BigInt
  films     films  @relation(fields: [film_id], references: [id])
  people    people @relation(fields: [person_id], references: [id])
}

model pilots {
  id        Int     @id @default(autoincrement()) @map("_id")
  person_id BigInt
  vessel_id BigInt
  people    people  @relation(fields: [person_id], references: [id])
  vessels   vessels @relation(fields: [vessel_id], references: [id])
}

model planets {
  id               Int                @id @default(autoincrement()) @map("_id")
  name             String?            @db.VarChar
  rotation_period  Int?
  orbital_period   Int?
  diameter         Int?
  climate          String?            @db.VarChar
  gravity          String?            @db.VarChar
  terrain          String?            @db.VarChar
  surface_water    String?            @db.VarChar
  population       BigInt?
  people           people[]
  planets_in_films planets_in_films[]
  species          species[]
}

model planets_in_films {
  id        Int     @id @default(autoincrement()) @map("_id")
  film_id   BigInt
  planet_id BigInt
  films     films   @relation(fields: [film_id], references: [id])
  planets   planets @relation(fields: [planet_id], references: [id])
}

model species {
  id               Int                @id @default(autoincrement()) @map("_id")
  name             String             @db.VarChar
  classification   String?            @db.VarChar
  average_height   String?            @db.VarChar
  average_lifespan String?            @db.VarChar
  hair_colors      String?            @db.VarChar
  skin_colors      String?            @db.VarChar
  eye_colors       String?            @db.VarChar
  language         String?            @db.VarChar
  homeworld_id     BigInt?
  planets          planets?           @relation(fields: [homeworld_id], references: [id])
  people           people[]
  species_in_films species_in_films[]
}

model species_in_films {
  id         Int     @id @default(autoincrement()) @map("_id")
  film_id    BigInt
  species_id BigInt
  films      films   @relation(fields: [film_id], references: [id])
  species    species @relation(fields: [species_id], references: [id])
}

model starship_specs {
  id                Int     @id @default(autoincrement()) @map("_id")
  hyperdrive_rating String? @db.VarChar
  MGLT              String? @db.VarChar
  vessel_id         BigInt
  vessels           vessels @relation(fields: [vessel_id], references: [id])
}

model vessels {
  id                     Int                @id @default(autoincrement()) @map("_id")
  name                   String             @db.VarChar
  manufacturer           String?            @db.VarChar
  model                  String?            @db.VarChar
  vessel_type            String             @db.VarChar
  vessel_class           String             @db.VarChar
  cost_in_credits        BigInt?
  length                 String?            @db.VarChar
  max_atmosphering_speed String?            @db.VarChar
  crew                   Int?
  passengers             Int?
  cargo_capacity         String?            @db.VarChar
  consumables            String?            @db.VarChar
  pilots                 pilots[]
  starship_specs         starship_specs[]
  vessels_in_films       vessels_in_films[]
}

model vessels_in_films {
  id        Int     @id @default(autoincrement()) @map("_id")
  vessel_id BigInt
  film_id   BigInt
  films     films   @relation(fields: [film_id], references: [id])
  vessels   vessels @relation(fields: [vessel_id], references: [id])
}
