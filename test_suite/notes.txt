CREATE TABLE userprofile(
  user_id serial PRIMARY KEY,
	username VARCHAR ( 50 )  NULL,
	password VARCHAR ( 50 ) NULL,
	email VARCHAR ( 255 )  NULL,
	created_on TIMESTAMP  NULL,
        last_login TIMESTAMP 
);

CREATE TABLE post(
  post_id serial PRIMARY KEY,
	posts VARCHAR ( 250 )  NULL,
	comments VARCHAR (100 ) NULL,
	likes INT CHECK ( likes >= 0),
	created_on TIMESTAMP  NULL,
  last_update TIMESTAMP ,
user_id INT NOT NULL,
FOREIGN KEY (user_id)
      REFERENCES userprofile (user_id)
);
CREATE TABLE delete(
  user_id serial PRIMARY KEY,
	username VARCHAR ( 50 )  NULL,
	password VARCHAR ( 50 ) NULL,
	email VARCHAR ( 255 )  NULL,
	created_on TIMESTAMP  NULL,
        last_login TIMESTAMP 
);



INSERT INTO 
    userprofile(username, password, email ,created_on)
VALUES
    ('Golden_Retreiver', 'golDenR', 'iamagooddog@dogs.com',NOW()),
    ('Superman', 'IamnotHuman', 'superman@superman.com',NOW()),
    ('MrBing','BingbingBing', 'chandlerbing@bings.com',NOW());
    
INSERT INTO 
    delete(username, password, email ,created_on)
VALUES
    ('Golden_Retreiver', 'golDenR', 'iamagooddog@dogs.com',NOW()),
    ('Superman', 'IamnotHuman', 'superman@superman.com',NOW()),
    ('MrBing','BingbingBing', 'chandlerbing@bings.com',NOW());

    
INSERT INTO 
    post(posts, comments, likes , user_id, created_on)
VALUES
    ('dORM', 'dORM is an amazing deno framework', 100, 1,NOW()),
    ('dorm Members', 'Han, Hanji, Myo and Nick', '10',3,NOW());

    // test commands
    deno test ./test_suite/update_test.ts --allow-net --unstable





create psql database
psql -d <url from elephantSQL> -f starwars_postgres_create.sql